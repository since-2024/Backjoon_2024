# https://www.acmicpc.net/problem/17626
#
# Q:
# 라그랑주는 1770년에 모든 자연수는 넷 혹은 그 이하의 제곱수의 합으로 표현할 수 있다고 증명하였다.
# 어떤 자연수는 복수의 방법으로 표현된다.
#
# 예를 들면, 26은 52과 12의 합이다. 또한 42 + 32 + 12으로 표현할 수도 있다.
#
# 역사적으로 암산의 명수들에게 공통적으로 주어지는 문제가 바로 자연수를 넷 혹은 그 이하의 제곱수 합으로 나타내라는 것이었다.
# 1900년대 초반에 한 암산가가 15663 = 125^2 + 6^2 + 1^2 + 1^2라는 해를 구하는데 8초가 걸렸다는 보고가 있다.
# 좀 더 어려운 문제에 대해서는 56초가 걸렸다: 11339 = 105^2 + 15^2 + 8^2 + 5^2.
#
# 자연수 n이 주어질 때, n을 최소 개수의 제곱수 합으로 표현하는 컴퓨터 프로그램을 작성하시오.
#
# Input:
# 입력은 표준입력을 사용한다. 입력은 자연수 n을 포함하는 한 줄로 구성된다. 여기서, 1 ≤ n ≤ 50,000이다.
#
# Output:
# 출력은 표준출력을 사용한다. 합이 n과 같게 되는 제곱수들의 최소 개수를 한 줄에 출력한다.
#
# Example:
# in:
# 25
#
# out:
# 1

# 실패한 풀이
# -- 12의 경우, 9+1+1+1 로 4가 나오지만,
#    최단은 4+4+4 로 3이 나온다.
if 0:
    n = int(input())
    dp = [0] * (50000 + 1)
    dp[1] = 1

    idx = 1
    idx_1 = 1 ** 2
    idx_2 = (idx + 1) ** 2

    for i in range(2, n + 1):
        dp[i] = dp[i - idx_1] + 1

        if i == idx_2:
            dp[i] = 1
            idx += 1
            idx_1 = idx_2
            idx_2 = (idx + 1) ** 2

    print(dp[n])

n = int(input())

dp = [0]*(50000+1)
dp[1] = 1

k = 1
while k ** 2 <= n:
    dp[k**2] = 1
    k += 1

for i in range(2, n + 1):
    if dp[i] == 1:
        pass
    else:
        dp[i] = dp[i-1] + 1

        j = 2
        while j ** 2 <= i:
            dp[i] = min(dp[i], dp[j**2] + dp[i - (j**2)])
            j += 1

print(dp[n])
